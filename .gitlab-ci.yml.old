---
stages:
  - prebuild
  - test
  - build
  - devicefarm-test

### - Pre-build - ###
# Helpers / Anchors
.kaniko_build:
  tags:
    - docker-machine
    - large
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - if [ "$CI_COMMIT_REF_SLUG" == 'master' ]; then KANIKO_ARGS="--destination $CI_REGISTRY_IMAGE/${DOCKER_IMAGE_NAME}:latest $KANIKO_ARGS"; fi
    - echo "${KANIKO_ARGS}"
    - |
        echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" \
        > /kaniko/.docker/config.json
    - |
        echo "-----BEGIN CERTIFICATE-----
        MIIFJTCCAw2gAwIBAgIUMI0Z8YSLeRq8pZks40O3Dq2m8TIwDQYJKoZIhvcNAQEL
        BQAwGjEYMBYGA1UEAxMPRXZlcm55bSBSb290IENBMB4XDTE3MTAxMTIwMTAxMFoX
        DTQ3MTAwNDIwMTAzOVowGjEYMBYGA1UEAxMPRXZlcm55bSBSb290IENBMIICIjAN
        BgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEA1kjmtmMfLJfsqUNaco44N3brW8Vu
        b02lAeEwbxc65mwfAG8kAjW7kYhI/fDXFOYXUvoa3Dg7bFeEatdIjHOahZssGM27
        HsQZ4PfRhPE6HtXFszmDwXWuEekVxoyueTqL7ExnNZ+BRTXvPfm5nw1E7L3o3xHF
        GSOtWFCyHfKd1LwMKzAVSjxlawEZnfk3WK3NxrC4UYMlQaDme7m3rCMfO+KBQk69
        bFXsgn6/EihVeQ8T1+T8gogofzh5b4Z7kS6e6GMqotbGFg4agejkRVsIglSpaQLk
        2Ztn/MP1dwgyvO4uvplB4sxZSC2FhhovlwPETmbKsnpj020+m0+YU4FPKwjroMiH
        tP//YqiNKsLxtjhffW7XFToyy0qQttW5RMWnyx4MXs9Hwcy29gY1izeGMSzz3zV5
        HG8JSJikuYbYiGJRVS0egovkVjja6lrVk0Q4Hm5pbw4l7LYCd6bkDLMsRaS1QnWs
        9iz6XEf5SpIu1FuqHmlhj1ABehUyGIg5oC6egML3q78yk0mCW523qMFa9Kjnk871
        mmXSCn3p/3DCrwWYfpcibxtVaKyJj6ISYIcl+Zu65Uzmhf+nj56x3gkNgEOva7JS
        Xge+FxPxsaXBGyeSH09nNIoNmh/UucuzpNY2UyCpJuqXHtR5jaACSdsqNxG8tcDg
        K9v98D/DFiShghECAwEAAaNjMGEwDgYDVR0PAQH/BAQDAgEGMA8GA1UdEwEB/wQF
        MAMBAf8wHQYDVR0OBBYEFOrH4oUpB94gNDNqdGG92kdVZ3qkMB8GA1UdIwQYMBaA
        FOrH4oUpB94gNDNqdGG92kdVZ3qkMA0GCSqGSIb3DQEBCwUAA4ICAQCwjN3ggZ98
        BXT39fKkCX3FHb0++aFcIyMKWrcZIpYrl3GoZsNKZK4QNQ+uJOP8xmqgyrCoMfch
        VIGPQ0RDN/IzqCLhc/U3pDmk2hXa3xTxD3gpCQZ6Bz04KlcLfZd5jzbI741bVDyF
        a1n46bEyuqV4SsNJWI/FGokJCNcZH66njBQBaQAccZ7xB9vWU9yjIYtGQDDvSm6J
        SC2knrQri0vv4QLUSc1LS6AlWWSQxcCpcdO+OzIFGsf5bVmYN6J4R3COY5NyQ+yn
        pOSN2NOh5h3ZrYAxm3i4Il0orVLveVcTVDGeAgZUII4YLJi/01RHGqit3aCuApSh
        bzFTZ5FldFss+JX9iAhqpFDbHLgae0F3QmYEnGilt/PzO4j23QJo3FZKeruQLH7P
        L9aOgN6S2+Akbbm9YTc59yzU5TZMxANwTdaYFWFqk/8nKgZiBR1l8jnWTlWnm86A
        qVssH3DLKwiYrWSOHRzGuN5BmPXxxtKQJlwAXt0wJE3puUkaJSRo7CJQ3QNMoKDe
        OjzXc9WvkFIXr3Eui8UTiHB/WT7N4o8hmVN404akGfWE0YNwRVfWpjGdew6g0tZi
        lFnjUUk49av67um43JHcinT5NFPuleZzkjaL/D8ueOrjXQDy05rwVdgmw9pXog4B
        Tw6APXtEnjfD2H8HOpOX/7ef4gWK0O1Q7A==
        -----END CERTIFICATE-----" >> /kaniko/ssl/certs/ca-certificates.crt
    - |
        /kaniko/executor ${KANIKO_ARGS} --context $CI_PROJECT_DIR --dockerfile $CI_PROJECT_DIR/${DOCKERFILE_PATH} \
        --destination $CI_REGISTRY_IMAGE/${DOCKER_IMAGE_NAME}:${CI_COMMIT_REF_SLUG}

# Jobs
devicefarm-buildtools:
  stage: prebuild
  extends: .kaniko_build
  variables:
    DOCKERFILE_PATH: ci/images/devicefarm.dockerfile
    DOCKER_IMAGE_NAME: devicefarm
  only:
    changes:
      - ci/images/devicefarm.dockerfile

### - Test - ###

### - iOS - ###
.build-ios:
  stage: build
  tags:
    - macos
    - mojave
    - xcode-11-3
  artifacts:
    paths:
      - ios/EvernymMobileSDK.ipa
  except:
    variables:
      - $CI_COMMIT_MESSAGE =~ /[[Cc][Ii]\s[Ss][Kk][Ii][Pp]]/
  script:
    - xcversion select --verbose --symlink 11.3
    - xcversion selected
    - sudo xcodebuild -license accept
    - cd ios
    - gem uninstall bundler
    - gem install bundler
    - bundler update --bundler
    - gem install cocoapods
    - cd ..
    - mkdir -p ~/.ssh/
    - ssh-keyscan -4H gitlab.corp.evernym.com > ~/.ssh/known_hosts
    - eval $(ssh-agent -s)
    - echo "$CALLCENTER_CERTS_DEPLOY_KEY" | tr -d '\r' | ssh-add - > /dev/null
    - echo "$IOSDEV_EVERNYM_RSA_KEY" | tr -d '\r' | ssh-add - > /dev/null
    - chmod 644 ~/.ssh/known_hosts
    - nvm use
    - yarn install
    - security -v unlock-keychain -p ${VAGRANT_USER_PASS} ~/Library/Keychains/login.keychain-db
    - git config --global user.name 'Gitlab'
    - git config --global user.email 'it@evernym.com'
    - git remote set-url origin git@gitlab.corp.evernym.com:${CI_PROJECT_PATH}.git
    - cd ios
    - bundle install
    - ${FASTLANE_COMMAND}
  after_script:
    - cat ./ios/react-native-xcode.sh.log

build-ios-merge-request:
  extends: .build-ios
  variables:
    BUILD_TYPE: 'Evernym Mobile SDK Dev Build'
    DEVELOPER_DIR: '/Applications/Xcode.app/Contents/Developer/'
    FASTLANE_COMMAND: 'bundle exec fastlane ci --verbose'
  only:
    refs:
      - merge_requests

build-ios-master:
  extends: .build-ios
  # Variable expansion doesn't work in `variables` section. Do it here instead.
  variables:
    BUILD_TYPE: 'QA Evernym Mobile SDK Build'
    DEVELOPER_DIR: '/Applications/Xcode.app/Contents/Developer/'
    # this gets passed to the anchor
    FASTLANE_COMMAND: 'bundle exec fastlane cd --disable_runner_upgrades --verbose'
  only:
    refs:
      - master@dev/evernym-mobile-sdk/EvernymMobileSDK

build-ios-stage:
  extends: .build-ios
  variables:
    BUILD_TYPE: 'Evernym Mobile SDK Stage Build'
    DEVELOPER_DIR: '/Applications/Xcode.app/Contents/Developer/'
    FASTLANE_COMMAND: 'bundle exec fastlane cd --disable_runner_upgrades --verbose'
  only:
    refs:
      - stage@dev/evernym-mobile-sdk/EvernymMobileSDK

build-ios-stable:
  extends: .build-ios
  variables:
    BUILD_TYPE: 'ConnectMe Stage Build'
    DEVELOPER_DIR: '/Applications/Xcode.app/Contents/Developer/'
    FASTLANE_COMMAND: 'bundle exec fastlane cd --disable_runner_upgrades --verbose'
  only:
    refs:
      - stable@dev/evernym-mobile-sdk/EvernymMobileSDK

### - Android - ###
# .build-android:
#   stage: build
#   tags:
#     - docker
#   image: bitriseio/android-ndk-lts
#   artifacts:
#     paths:
#       - android/app/build/outputs/apk/release/*.apk
#     expire_in: 1 week
#   script:
#     - mkdir -p $HOME/keystores/
#     - echo ${ANDROID_KEYSTORE_B64} | base64 -d > $HOME/keystores/my_keystore.jks
#     - yes | sdkmanager --licenses || true
#     - node --version
#     - sudo apt-get remove -y nodejs
#     - curl -sL https://deb.nodesource.com/setup_12.x | bash -
#     - apt-get install -y nodejs
#     - node --version
#     - curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -
#     - echo "deb https://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list
#     - sudo apt-get update && sudo apt-get install -y yarn
#     - yarn config set ignore-engines true
#     - yarn config set ignore-platforms true
#     - yarn
#     - gem install fastlane
#     - cd android
#     - bundle install
#     - bundle exec fastlane alpha

# build-android-merge-request:
#   extends: .build-android
#   only:
#     refs:
#       - merge_requests

# build-android-master:
#   extends: .build-android
#   only:
#     refs:
#       - master@dev/connectme/ConnectMe

# build-android-stage:
#   extends: .build-android
#   only:
#     refs:
#       - stage@dev/connectme/ConnectMe

# build-android-stable:
  extends: .build-android
  only:
    refs:
      - stable@dev/connectme/ConnectMe

### - Devicefarm-test - ###
include:
  local: "/ci/devicefarm-test.yml"
