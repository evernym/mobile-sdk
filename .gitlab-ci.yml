---
stages:
  - prebuild
  - test
  - build
  - devicefarm-test

### - Pre-build - ###
# Helpers / Anchors
.kaniko_build:
  tags:
    - docker-machine
    - large
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - if [ "$CI_COMMIT_REF_SLUG" == 'master' ]; then KANIKO_ARGS="--destination $CI_REGISTRY_IMAGE/${DOCKER_IMAGE_NAME}:latest $KANIKO_ARGS"; fi
    - echo "${KANIKO_ARGS}"
    - |
        echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" \
        > /kaniko/.docker/config.json
    - |
        echo "-----BEGIN CERTIFICATE-----
        -----END CERTIFICATE-----" >> /kaniko/ssl/certs/ca-certificates.crt
    - |
        /kaniko/executor ${KANIKO_ARGS} --context $CI_PROJECT_DIR --dockerfile $CI_PROJECT_DIR/${DOCKERFILE_PATH} \
        --destination $CI_REGISTRY_IMAGE/${DOCKER_IMAGE_NAME}:${CI_COMMIT_REF_SLUG}

# Jobs
devicefarm-buildtools:
  stage: prebuild
  extends: .kaniko_build
  variables:
    DOCKERFILE_PATH: ci/images/devicefarm.dockerfile
    DOCKER_IMAGE_NAME: devicefarm
  only:
    changes:
      - ci/images/devicefarm.dockerfile

### - Test - ###

### - iOS - ###
.build-ios:
  stage: build
  tags:
    - macos
    - mojave
    - xcode-11-3
  artifacts:
    paths:
      - ios/ConnectMe.ipa
  except:
    variables:
      - $CI_COMMIT_MESSAGE =~ /[[Cc][Ii]\s[Ss][Kk][Ii][Pp]]/
  script:
    - xcversion select --verbose --symlink 11.3
    - xcversion selected
    - sudo xcodebuild -license accept
    - cd ios
    - gem uninstall bundler
    - gem install bundler
    - bundler update --bundler
    - gem install cocoapods
    - cd ..
    - mkdir -p ~/.ssh/
    - ssh-keyscan -4H gitlab.corp.evernym.com > ~/.ssh/known_hosts
    - eval $(ssh-agent -s)
    - echo "$CALLCENTER_CERTS_DEPLOY_KEY" | tr -d '\r' | ssh-add - > /dev/null
    - echo "$IOSDEV_EVERNYM_RSA_KEY" | tr -d '\r' | ssh-add - > /dev/null
    - chmod 644 ~/.ssh/known_hosts
    - nvm use
    - yarn install
    - security -v unlock-keychain -p ${VAGRANT_USER_PASS} ~/Library/Keychains/login.keychain-db
    - git config --global user.name 'Gitlab'
    - git config --global user.email 'it@evernym.com'
    - git remote set-url origin git@gitlab.corp.evernym.com:${CI_PROJECT_PATH}.git
    - cd ios
    - bundle install
    - ${FASTLANE_COMMAND}
  after_script:
    - cat ./ios/react-native-xcode.sh.log

build-ios-merge-request:
  extends: .build-ios
  variables:
    BUILD_TYPE: 'ConnectMe Dev Build'
    DEVELOPER_DIR: '/Applications/Xcode.app/Contents/Developer/'
    FASTLANE_COMMAND: 'bundle exec fastlane ci --verbose'
  only:
    refs:
      - merge_requests

build-ios-master:
  extends: .build-ios
  # Variable expansion doesn't work in `variables` section. Do it here instead.
  variables:
    BUILD_TYPE: 'QA ConnectMe Build'
    DEVELOPER_DIR: '/Applications/Xcode.app/Contents/Developer/'
    # this gets passed to the anchor
    FASTLANE_COMMAND: 'bundle exec fastlane cd --disable_runner_upgrades --verbose'
  only:
    refs:
      - master@dev/connectme/ConnectMe

build-ios-stage:
  extends: .build-ios
  variables:
    BUILD_TYPE: 'ConnectMe Stage Build'
    DEVELOPER_DIR: '/Applications/Xcode.app/Contents/Developer/'
    FASTLANE_COMMAND: 'bundle exec fastlane cd --disable_runner_upgrades --verbose'
  only:
    refs:
      - stage@dev/connectme/ConnectMe

build-ios-stable:
  extends: .build-ios
  variables:
    BUILD_TYPE: 'ConnectMe Stage Build'
    DEVELOPER_DIR: '/Applications/Xcode.app/Contents/Developer/'
    FASTLANE_COMMAND: 'bundle exec fastlane cd --disable_runner_upgrades --verbose'
  only:
    refs:
      - stable@dev/connectme/ConnectMe

### - Android - ###
.build-android:
  stage: build
  tags:
    - docker
  image: bitriseio/android-ndk-lts
  artifacts:
    paths:
      - android/app/build/outputs/apk/release/*.apk
    expire_in: 1 week
  script:
    - mkdir -p $HOME/keystores/
    - echo ${ANDROID_KEYSTORE_B64} | base64 -d > $HOME/keystores/my_keystore.jks
    - yes | sdkmanager --licenses || true
    - node --version
    - sudo apt-get remove -y nodejs
    - curl -sL https://deb.nodesource.com/setup_12.x | bash -
    - apt-get install -y nodejs
    - node --version
    - curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -
    - echo "deb https://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list
    - sudo apt-get update && sudo apt-get install -y yarn
    - yarn config set ignore-engines true
    - yarn config set ignore-platforms true
    - yarn
    - gem install fastlane
    - cd android
    - bundle install
    - bundle exec fastlane alpha

build-android-merge-request:
  extends: .build-android
  only:
    refs:
      - merge_requests

build-android-master:
  extends: .build-android
  only:
    refs:
      - master@dev/connectme/ConnectMe

build-android-stage:
  extends: .build-android
  only:
    refs:
      - stage@dev/connectme/ConnectMe

build-android-stable:
  extends: .build-android
  only:
    refs:
      - stable@dev/connectme/ConnectMe

### - Devicefarm-test - ###
include:
  local: "/ci/devicefarm-test.yml"

